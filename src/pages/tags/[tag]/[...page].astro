---
import type { GetStaticPathsOptions, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import PageLayout from "@/layouts/BaseLayout";
import PostPreview from "@/components/PostPreview";
import Pagination from "@/components/Pagination";

import { getUniqueTags, sortMDByDate } from "@/utils";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = await getCollection("post");
  const allPostsByDate = sortMDByDate(allPosts);
  const uniqueTags = getUniqueTags(allPostsByDate);
  return uniqueTags.map((tag) => {
    const filterPosts = allPostsByDate.filter((post) =>
      post.data.tags?.includes(tag)
    );
    return paginate(filterPosts, {
      params: { tag },
      pageSize: 10,
    });
  });
}
interface Props {
  page: Page<CollectionEntry<"post">>;
}
const { page } = Astro.props;
const { tag } = Astro.params;
const meta = {
  title: `Tag: ${tag}`,
  description: `View all posts with the tag - ${tag}`,
};
const paginationProps = {
  ...(page.url.prev && {
    prevUrl: {
      url: page.url.prev,
      text: `← Previous Tags`,
    },
  }),
  ...(page.url.next && {
    nextUrl: {
      url: page.url.next,
      text: `Next Tags →`,
    },
  }),
};
---

<PageLayout meta={meta}>
  <h1>
    <a href="/tags/">Tags</a><span>→</span>
    <span>#{tag}</span>
  </h1>
  <section aria-label="Blog post list">
    <ul>
      {
        page.data.map((p) => (
          <li>
            <PostPreview post={p} as="h2" withDesc />
          </li>
        ))
      }
    </ul>
    <Pagination {...paginationProps} />
  </section>
</PageLayout>
